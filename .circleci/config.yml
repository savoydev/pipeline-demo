version: 2.1

orbs:
  python: circleci/python@1.5.0

jobs:
  build-python: # This is the name of the job, feel free to change it to better match what you're trying to do!
    docker:
      - image: cimg/python:3.10.2
        environment:
          PIPENV_VENV_IN_PROJECT: true
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          name: Restore pipenv dependency cache
          keys:
            - pipenv-deps-{{ checksum "Pipfile.lock" }}
      - python/install-packages:
          args: --dev --deploy --ignore-pipfile
          pkg-manager: pipenv
          cache-version: v3
          venv-cache: false
      - save_cache:
          name: Save pipenv dependency cache
          paths:
            - /home/circleci/project/.venv
          key: pipenv-deps-{{ checksum "Pipfile.lock" }}
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  build-vue:
    docker:
      - image: cimg/node:15.0.1
    resource_class: small
    working_directory: ~/project/demo_vue
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          name: Restore yarn dependency cache
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
      - node/install-packages:
          pkg-manager: yarn
  test-python: # This is the name of the job, feel free to change it to better match what you're trying to do!
    docker:
      - image: cimg/python:3.10.2
    parallelism: 1
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Run tests
          command: |
            pipenv run pytest -k test_ --junitxml=test-results/junit/junit.xml --html=test-results/html/report.html | circleci tests split --split-by=timings
      - store_artifacts:
          path: test-results 
      - store_test_results:
          path: test-results

workflows:
  build-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    jobs:
      - build-python
      - build-vue
      - test-python:
          requires:
            - build-python
